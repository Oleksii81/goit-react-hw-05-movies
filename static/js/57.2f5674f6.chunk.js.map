{"version":3,"file":"static/js/57.2f5674f6.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Searchbar/SearchBar.styled.js","components/Searchbar/SearchBar.jsx","pages/movie/movie.styled.js","pages/movie/movies.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const LoaderStyled = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    z-index: 100500;\n    `","import { RotatingLines } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { LoaderStyled } from './Loader.styled';\n\nconst Loader = ({ loading }) => {\n  return (\n    <LoaderStyled>\n      <RotatingLines\n        loading={loading}\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderStyled>\n  );\n};\nLoader.propTypes = {\n  loading: PropTypes.bool,\n};\n\nexport default Loader;","import { styled } from \"styled-components\";\n\nexport const SearchBarStyled = styled.form`\n    display: flex;\n    padding: 0 24px;\n    justify-content: center;\n    align-items: center;\n    .search-input {\n        margin-right: 24px;\n        height: 32px;\n        min-width: 180px;\n        padding-left: 8px;\n        border-radius: 5px;\n        border-color: transparent;\n        background-color: #85afe4c0;\n        color: #1d2475;\n        align-items: center;\n        transition: width 1,5s ease-in-out;\n    }\n    .search-input:focus {\n        width: 300px;\n    }\n    .search-input:hover {\n    border-color: #daf52e;\n    box-shadow: 0px 3px 20px rgb(247, 243, 4);\n    }\n    .search-input:hover::before {\n    opacity: 1;\n    animation: glowing-border 1s ease-out infinite alternate;\n  }\n\n  @keyframes glowing-border {\n    0% {\n      box-shadow: 0 0 5px #daf52e;\n    }\n    100% {\n      box-shadow: 0 0 20px 10px #daf52e;\n    }\n  }\n  .search-btn {\n    border-radius: 5px;\n    border-color: transparent;\n    background-color: #1d2475;\n    font-weight: 500;\n    padding: 8px 16px;\n    color: white;\n    font-weight: 500;\n  }\n  .search-btn:hover {\n    border-color: #daf52e;\n    box-shadow: 0px 3px 20px rgb(247, 243, 4);\n    }\n    .search-btn:hover::before {\n    opacity: 1;\n    animation: glowing-border 1s ease-out infinite alternate;\n  }\n`","import React from 'react';\nimport { SearchBarStyled } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n\n  return (\n    <SearchBarStyled>\n      <input\n        type=\"text\"\n        name=\"movieName\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n        required\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie...\"\n        className=\"search-input\"\n      />\n      <button type=\"submit\" className=\"search-btn\">\n        <span>Search</span>\n      </button>\n    </SearchBarStyled>\n  );\n};\n\nexport default SearchBar;","import styled from \"styled-components\";\n\nexport const MoviesContainer = styled.main`\n  .search-movie-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    list-style: none;\n    gap: 24px;\n    padding: 24px;\n  }\n  .search-movie-item {\n    background-color: #1d2475;\n    border-radius: 15px;\n    border-color: transparent;\n    overflow: hidden;\n    list-style: none;\n  }\n  .search-movie-item:hover {\n    border-color: #daf52e;\n    box-shadow: 0px 3px 20px rgb(247, 243, 4);\n  }\n\n  .search-movie-item:hover::before {\n    opacity: 1;\n    animation: glowing-border 1s ease-out infinite alternate;\n  }\n\n  @keyframes glowing-border {\n    0% {\n      box-shadow: 0 0 5px #daf52e;\n    }\n    100% {\n      box-shadow: 0 0 20px 10px #daf52e;\n    }\n  }\n  .original-title {\n    font-weight: 700;\n    text-align: center;\n    min-height: 48px;\n    width: 210px;\n    color: white;\n    background-color: #1d2475;\n    margin: 0;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n}\n.search-movie-link {\n    text-decoration: none;\n}\n`","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from '../../api/api';\nimport SearchBar from '../../components/Searchbar/SearchBar';\nimport { MoviesContainer } from './movie.styled';\n\n\nconst Movies = () => {\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('movieName') ?? '';\n    const [moviesList, setMoviesList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n  \n    useEffect(() => {\n      if (movieName === '') {\n        return;\n      }\n      setMoviesList([]);\n      setIsLoading(true);\n  \n      searchMovies(movieName).then(data => {\n        if (!data.results.length) {\n          setIsLoading(false);\n          setError(true);\n          return console.log(\n            'There is no movies with this request. Please, try again'\n          );\n        }\n        setError(false);\n        setMoviesList(data.results);\n        setIsLoading(false);\n      });\n    }, [movieName]);\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      const searchForm = e.currentTarget;\n      setSearchParams({ movieName: searchForm.elements.movieName.value });\n    };\n  \n    const path = 'https://image.tmdb.org/t/p/w300';\n  \n    return (\n      <MoviesContainer>\n        <SearchBar className=\"searchbar\" onSubmit={handleSubmit} />\n        {error && <p>We can't find any movie with this name</p>}\n        <ul className=\"search-movie-list\">\n          {moviesList.map(movie => {\n            return (\n              <li className=\"search-movie-item\" key={movie.id}>\n                <Link\n                  className=\"search-movie-link\"\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  <img\n                    className=\"search-movie-img\"\n                    width={210}\n                    height={315}\n                    src={\n                      movie.poster_path\n                        ? path + movie.poster_path\n                        : 'http://www.suryalaya.org/images/no_image.jpg'\n                    }\n                    alt={movie.original_title}\n                  />\n                  <p className='original-title'>{movie.title}</p>\n                  \n                </Link>\n              </li>\n            );\n          })}\n          {isLoading && <Loader />}\n        </ul>\n      </MoviesContainer>\n    );\n  };\n  export default Movies;"],"names":["LoaderStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","loading","_jsx","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","SearchBarStyled","onSubmit","_jsxs","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","className","MoviesContainer","_searchParams$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","get","_useState","useState","_useState2","moviesList","setMoviesList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","searchMovies","then","data","results","length","console","log","SearchBar","e","preventDefault","searchForm","currentTarget","elements","value","map","movie","Link","to","concat","id","state","from","height","src","poster_path","alt","original_title","Loader"],"sourceRoot":""}